{"version":3,"file":"static/js/367.b628e98f.chunk.js","mappings":"iMAuFA,UApFoB,WAClB,OAAgCA,EAAAA,EAAAA,UAAS,IAAG,eAArCC,EAAQ,KAAEC,EAAW,MAE5BC,EAAAA,EAAAA,YAAU,WACRC,GACF,GAAG,IAEH,IAAMA,EAAa,yCAAG,kHAEKC,EAAAA,EAAAA,IAAU,8CAA8C,KAAD,EAAxEC,EAAQ,OACdJ,EAAYI,EAASC,MAAM,gDAE3BC,QAAQC,MAAM,2BAA2B,EAAD,IAAS,yDAEpD,kBAPkB,mCASbC,EAAa,yCAAG,WAAOC,GAAS,+FAE5BN,EAAAA,EAAAA,OAAa,6CAAD,OAA8CM,IAAa,KAAD,EAC5EC,MAAM,gCACNR,IAAiB,gDAEjBI,QAAQC,MAAM,0BAA0B,EAAD,IACvCG,MAAM,+CAA+C,yDAExD,gBATkB,sCA2CnB,OACE,4BACE,wCACA,mBAAOC,MAAO,CAACC,eAAgB,YAAY,WACzC,4BACE,2BACE,eAAID,MAAO,CAACE,QAAS,OAAQC,OAAQ,mBAAmB,yBACxD,eAAIH,MAAO,CAACE,QAAS,OAAQC,OAAQ,mBAAmB,2BACxD,eAAIH,MAAO,CAACE,QAAS,OAAQC,OAAQ,mBAAmB,yBACxD,eAAIH,MAAO,CAACE,QAAS,OAAQC,OAAQ,mBAAmB,uBACxD,eAAIH,MAAO,CAACE,QAAS,OAAQC,OAAQ,mBAAmB,sBACxD,eAAIH,MAAO,CAACE,QAAS,OAAQC,OAAQ,mBAAmB,sBACxD,eAAIH,MAAO,CAACE,QAAS,OAAQC,OAAQ,mBAAmB,4BACxD,eAAIH,MAAO,CAACE,QAAS,OAAQC,OAAQ,mBAAmB,yBACxD,eAAIH,MAAO,CAACE,QAAS,OAAQC,OAAQ,mBAAmB,2BAG5D,2BAjDiB,WACrB,IAAMC,EAAsBhB,EAASiB,QAAO,SAACC,EAAKC,GAMhD,OALKD,EAAIC,EAAQT,WAGfQ,EAAIC,EAAQT,WAAWU,KAAKD,GAF5BD,EAAIC,EAAQT,WAAa,CAACS,GAIrBD,CACT,GAAG,CAAC,GAEJ,OAAOG,OAAOC,QAAQN,GAAqBO,KAAI,+BAAEb,EAAS,KAAEc,EAAW,YACrE,UAAC,WAAc,YACb,yBACE,gBAAIC,QAAQ,IAAIb,MAAO,CAAEc,WAAY,QAAS,yBAAchB,OAE7Dc,EAAYD,KAAI,SAACJ,GAAO,OACvB,2BACE,eAAIP,MAAO,CAACE,QAAS,QAAQ,SAAEK,EAAQQ,UACvC,eAAIf,MAAO,CAACE,QAAS,QAAQ,SAAEK,EAAQS,YACvC,eAAIhB,MAAO,CAACE,QAAS,QAAQ,SAAEK,EAAQT,aACvC,eAAIE,MAAO,CAACE,QAAS,QAAQ,SAAEK,EAAQU,YACvC,eAAIjB,MAAO,CAACE,QAAS,QAAQ,SAAEK,EAAQW,UACvC,eAAIlB,MAAO,CAACE,QAAS,QAAQ,SAAEK,EAAQY,UACvC,eAAInB,MAAO,CAACE,QAAS,QAAQ,SAAEK,EAAQa,aACvC,eAAIpB,MAAO,CAACE,QAAS,QAAQ,SAAEK,EAAQc,aACvC,eAAIrB,MAAO,CAACE,QAAS,QAAQ,UAAC,mBAAQoB,QAAS,kBAAMzB,EAAcU,EAAQT,UAAU,EAAC,wBAT/ES,EAAQQ,OAUZ,MAfYjB,EAiBJ,GAErB,CAoBSyB,UAKX,C","sources":["testlist.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst ProductList = () => {\r\n  const [products, setProducts] = useState([]);\r\n\r\n  useEffect(() => {\r\n    fetchProducts();\r\n  }, []);\r\n\r\n  const fetchProducts = async () => {\r\n    try {\r\n      const response = await axios.get('https://duantn-backend.onrender.com/order/');\r\n      setProducts(response.data);\r\n    } catch (error) {\r\n      console.error('Error fetching products:', error);\r\n    }\r\n  };\r\n\r\n  const deleteProduct = async (orderCode) => {\r\n    try {\r\n      await axios.delete(`https://duantn-backend.onrender.com/order/${orderCode}`);\r\n      alert('Product deleted successfully');\r\n      fetchProducts(); // Refresh the list after deletion\r\n    } catch (error) {\r\n      console.error('Error deleting product:', error);\r\n      alert('Failed to delete product. Please try again.');\r\n    }\r\n  };\r\n\r\n  const renderProducts = () => {\r\n    const productsByOrderCode = products.reduce((acc, product) => {\r\n      if (!acc[product.orderCode]) {\r\n        acc[product.orderCode] = [product];\r\n      } else {\r\n        acc[product.orderCode].push(product);\r\n      }\r\n      return acc;\r\n    }, {});\r\n\r\n    return Object.entries(productsByOrderCode).map(([orderCode, productList]) => (\r\n      <React.Fragment key={orderCode}>\r\n        <tr>\r\n          <td colSpan=\"8\" style={{ fontWeight: 'bold' }}>Order Code: {orderCode}</td>\r\n        </tr>\r\n        {productList.map((product) => (\r\n          <tr key={product.prodID}>\r\n            <td style={{padding: '10px'}}>{product.prodID}</td>\r\n            <td style={{padding: '10px'}}>{product.prodName}</td>\r\n            <td style={{padding: '10px'}}>{product.orderCode}</td>\r\n            <td style={{padding: '10px'}}>{product.quantity}</td>\r\n            <td style={{padding: '10px'}}>{product.userID}</td>\r\n            <td style={{padding: '10px'}}>{product.cartID}</td>\r\n            <td style={{padding: '10px'}}>{product.prodPrice}</td>\r\n            <td style={{padding: '10px'}}>{product.orderDate}</td>\r\n            <td style={{padding: '10px'}}><button onClick={() => deleteProduct(product.orderCode)}>Delete</button></td>\r\n          </tr>\r\n        ))}\r\n      </React.Fragment>\r\n    ));\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Order List</h2>\r\n      <table style={{borderCollapse: 'collapse'}}>\r\n        <thead>\r\n          <tr>\r\n            <th style={{padding: '10px', border: '1px solid black'}}>Product ID</th>\r\n            <th style={{padding: '10px', border: '1px solid black'}}>Product Name</th>\r\n            <th style={{padding: '10px', border: '1px solid black'}}>Order Code</th>\r\n            <th style={{padding: '10px', border: '1px solid black'}}>Quantity</th>\r\n            <th style={{padding: '10px', border: '1px solid black'}}>User ID</th>\r\n            <th style={{padding: '10px', border: '1px solid black'}}>Cart ID</th>\r\n            <th style={{padding: '10px', border: '1px solid black'}}>Product Price</th>\r\n            <th style={{padding: '10px', border: '1px solid black'}}>Order Date</th>\r\n            <th style={{padding: '10px', border: '1px solid black'}}>Actions</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {renderProducts()}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProductList;"],"names":["useState","products","setProducts","useEffect","fetchProducts","axios","response","data","console","error","deleteProduct","orderCode","alert","style","borderCollapse","padding","border","productsByOrderCode","reduce","acc","product","push","Object","entries","map","productList","colSpan","fontWeight","prodID","prodName","quantity","userID","cartID","prodPrice","orderDate","onClick","renderProducts"],"sourceRoot":""}