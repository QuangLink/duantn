{"version":3,"file":"static/js/278.69aaf0f8.chunk.js","mappings":"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","sources":["Pages/Login/SigninForm.js","Pages/Login/SignUp.js","Pages/Login/SignInApp.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useToast } from \"@chakra-ui/react\";\r\nimport { NavLink, useNavigate } from \"react-router-dom\";\r\nimport { login } from \"../../Redux/Auth/auth.action\";\r\n\r\nfunction SignInForm() {\r\n  const [loginCreds, setLoginCreds] = useState({});\r\n  const dispatch = useDispatch();\r\n  const toast = useToast();\r\n  const { isAuth, username } = useSelector((store) => store.AuthManager);\r\n  const navigate = useNavigate();\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setLoginCreds((prevLoginCreds) => ({\r\n      ...prevLoginCreds,\r\n      [name]: value,\r\n    }));\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    dispatch(login(loginCreds));\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (isAuth) {\r\n      navigate(\"/\");\r\n      toast({\r\n        title: \"Login Success\",\r\n        description: `Welcome ${username}`,\r\n        status: \"success\",\r\n        duration: 8000,\r\n        isClosable: true,\r\n      });\r\n    }\r\n  }, [isAuth, username, navigate, toast]);\r\n\r\n  return (\r\n    <div className=\"form-container sign-in-container\">\r\n      <form onSubmit={handleSubmit}>\r\n        <h1>Đăng nhập</h1>\r\n        <div className=\"social-container\">\r\n          <a href=\"#\" className=\"social\">\r\n            <i className=\"fab fa-facebook-f\" />\r\n          </a>\r\n          <a href=\"#\" className=\"social\">\r\n            <i className=\"fab fa-google-plus-g\" />\r\n          </a>\r\n          <a href=\"#\" className=\"social\">\r\n            <i className=\"fab fa-linkedin-in\" />\r\n          </a>\r\n        </div>\r\n        <span>hoặc sử dụng tài khoản</span>\r\n        <input\r\n          type=\"email\"\r\n          placeholder=\"Email\"\r\n          name=\"email\"\r\n          onChange={handleChange}\r\n        />\r\n        <input\r\n          type=\"password\"\r\n          name=\"password\"\r\n          placeholder=\"Password\"\r\n          onChange={handleChange}\r\n        />\r\n        <a href=\"#\">Quên mật khẩu ?</a>\r\n        <button className=\"action-btn\">Đăng nhập</button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SignInForm;\r\n","import {\r\n  Box,\r\n  Button,\r\n  Flex,\r\n  FormControl,\r\n  FormLabel,\r\n  Heading,\r\n  Input,\r\n  InputGroup,\r\n  InputRightElement,\r\n  Link,\r\n  Stack,\r\n  Text,\r\n  useColorModeValue,\r\n  useToast,\r\n} from \"@chakra-ui/react\";\r\nimport React, { useState } from \"react\";\r\nimport { ViewIcon, ViewOffIcon } from \"@chakra-ui/icons\";\r\nimport { NavLink, useNavigate } from \"react-router-dom\";\r\nimport axios from \"axios\"; // Import Axios\r\n\r\nfunction SignUpForm() {\r\n  const [showPassword, setShowPassword] = useState(false);\r\n  const [username, setUserName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [mobile, setMobile] = useState(\"\");\r\n  const toast = useToast();\r\n  const navigate = useNavigate();\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    if (!username || !email || !password) {\r\n      toast({\r\n        title: \"Hãy điền đầy đủ thông tin\",\r\n        description: \"Hãy kiểm tra lại\",\r\n        status: \"error\",\r\n        duration: 2000,\r\n        isClosable: true,\r\n      });\r\n      return;\r\n    }\r\n\r\n    if (email.includes(\"@\") && email.includes(\".com\")) {\r\n      try {\r\n        const payload = {\r\n          username,\r\n          mobile,\r\n          email,\r\n          password,\r\n        };\r\n\r\n        const response = await axios.post(\r\n          \"https://duantn-backend.onrender.com/users/register\",\r\n          payload,\r\n        );\r\n        if (response.length > 0) {\r\n          const isDuplicateUsername = response.includes(\"Username\");\r\n\r\n          if (isDuplicateUsername) {\r\n            toast({\r\n              title: \"Tên người dùng đã tồn tại\",\r\n              description: \"Vui lòng chọn một tên người dùng khác\",\r\n              status: \"error\",\r\n              duration: 2000,\r\n              isClosable: true,\r\n            });\r\n\r\n            return;\r\n          }\r\n        } else {\r\n          toast({\r\n            title: \"Tạo tài khoản thành công\",\r\n            description: \"Chào mừng đến với JaguarStore\",\r\n            status: \"success\",\r\n            duration: 2000,\r\n            isClosable: true,\r\n          });\r\n          setTimeout(() => {\r\n            navigate(\"/login\");\r\n          }, 2200);\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error: \", error);\r\n        toast({\r\n          title: \"Username hoặc Email đã tồn tại\",\r\n          description: \"Hãy đăng nhập hoặc sử dụng Email/Username khác\",\r\n          status: \"error\",\r\n          duration: 2000,\r\n          isClosable: true,\r\n        });\r\n      }\r\n    } else {\r\n      toast({\r\n        title: \"Email không hợp lệ\",\r\n        description: \"Vui lòng nhập đúng định dạng email\",\r\n        status: \"error\",\r\n        duration: 1000,\r\n        isClosable: true,\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"form-container sign-up-container\">\r\n      <form>\r\n        <h1>Tạo tài khoản</h1>\r\n        <div className=\"social-container\">\r\n          <a href=\"#\" className=\"social\">\r\n            <i className=\"fab fa-facebook-f\" />\r\n          </a>\r\n          <a href=\"#\" className=\"social\">\r\n            <i className=\"fab fa-google-plus-g\" />\r\n          </a>\r\n          <a href=\"#\" className=\"social\">\r\n            <i className=\"fab fa-linkedin-in\" />\r\n          </a>\r\n        </div>\r\n        <span>Hoặc đăng ký bằng email</span>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Nhập tên người dùng\"\r\n          value={username}\r\n          onChange={(e) => setUserName(e.target.value)}\r\n        />\r\n        <input\r\n          type=\"email\"\r\n          placeholder=\"Nhập địa chỉ email\"\r\n          value={email}\r\n          onChange={(e) => setEmail(e.target.value)}\r\n        />\r\n        <InputGroup>\r\n          <input\r\n            type={showPassword ? \"text\" : \"password\"}\r\n            placeholder=\"Enter Your Password\"\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n          />\r\n          <InputRightElement h={\"full\"}>\r\n            <Button\r\n              variant={\"ghost\"}\r\n              onClick={() => setShowPassword((showPassword) => !showPassword)}\r\n            >\r\n              {showPassword ? <ViewIcon /> : <ViewOffIcon />}\r\n            </Button>\r\n          </InputRightElement>\r\n        </InputGroup>\r\n        <button className=\"action-btn\" onClick={handleSubmit}>\r\n          Đăng ký\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SignUpForm;\r\n","import React, { useState } from \"react\";\r\n\r\nimport \"./login.css\";\r\nimport SignInForm from \"./SigninForm\";\r\nimport SignUpForm from \"./SignUp\";\r\n\r\nexport function Login() {\r\n  const [type, setType] = useState(\"signIn\");\r\n\r\n  const handleOnClick = (text) => {\r\n    if (text !== type) {\r\n      setType(text);\r\n      return;\r\n    }\r\n  };\r\n\r\n  const containerClass =\r\n    \"container \" + (type === \"signUp\" ? \"right-panel-active\" : \"\");\r\n  return (\r\n    <div className=\"AppForm\">\r\n      <div className={containerClass} id=\"container\">\r\n        <SignUpForm />\r\n        <SignInForm />\r\n        <div className=\"overlay-container\">\r\n          <div className=\"overlay\">\r\n            <div className=\"overlay-panel overlay-left\">\r\n              <h1>Đã có tài khoản ?</h1>\r\n              <p>Để sử dụng các chức năng khác, vui lòng đăng nhập</p>\r\n              <button\r\n                className=\"action-btn ghost\"\r\n                id=\"signIn\"\r\n                onClick={() => handleOnClick(\"signIn\")}\r\n              >\r\n                Đăng nhập\r\n              </button>\r\n            </div>\r\n            <div className=\"overlay-panel overlay-right\">\r\n              <h1>Bạn chưa có tài khoản ?</h1>\r\n              <p>Hãy đăng ký tài khoản để sử dụng mọi chức năng</p>\r\n              <button\r\n                className=\"action-btn ghost\"\r\n                id=\"signUp\"\r\n                onClick={() => handleOnClick(\"signUp\")}\r\n              >\r\n                Đăng ký\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n"],"names":["useState","loginCreds","setLoginCreds","dispatch","useDispatch","toast","useToast","useSelector","store","AuthManager","isAuth","username","navigate","useNavigate","handleChange","e","target","name","value","prevLoginCreds","useEffect","title","description","status","duration","isClosable","className","onSubmit","preventDefault","login","href","type","placeholder","onChange","showPassword","setShowPassword","setUserName","email","setEmail","password","setPassword","mobile","handleSubmit","includes","payload","axios","response","length","setTimeout","console","error","h","variant","onClick","Login","setType","handleOnClick","text","containerClass","id","SignUp"],"sourceRoot":""}