{"version":3,"file":"static/js/213.b3ca95a2.chunk.js","mappings":"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","sources":["../node_modules/@chakra-ui/progress/dist/index.esm.js","Pages/payment/Payments.jsx"],"sourcesContent":["// ../../../react-shim.js\nimport React from \"react\";\n\n// src/circular-progress.tsx\nimport {\n  chakra as chakra3,\n  forwardRef\n} from \"@chakra-ui/system\";\n\n// src/progress.utils.tsx\nimport { keyframes } from \"@chakra-ui/system\";\nfunction valueToPercent(value, min, max) {\n  return (value - min) * 100 / (max - min);\n}\nvar spin = keyframes({\n  \"0%\": {\n    strokeDasharray: \"1, 400\",\n    strokeDashoffset: \"0\"\n  },\n  \"50%\": {\n    strokeDasharray: \"400, 400\",\n    strokeDashoffset: \"-100\"\n  },\n  \"100%\": {\n    strokeDasharray: \"400, 400\",\n    strokeDashoffset: \"-260\"\n  }\n});\nvar rotate = keyframes({\n  \"0%\": {\n    transform: \"rotate(0deg)\"\n  },\n  \"100%\": {\n    transform: \"rotate(360deg)\"\n  }\n});\nvar progress = keyframes({\n  \"0%\": { left: \"-40%\" },\n  \"100%\": { left: \"100%\" }\n});\nvar stripe = keyframes({\n  from: { backgroundPosition: \"1rem 0\" },\n  to: { backgroundPosition: \"0 0\" }\n});\nfunction getProgressProps(options) {\n  const {\n    value = 0,\n    min,\n    max,\n    valueText,\n    getValueText,\n    isIndeterminate,\n    role = \"progressbar\"\n  } = options;\n  const percent = valueToPercent(value, min, max);\n  const getAriaValueText = () => {\n    if (value == null)\n      return void 0;\n    return typeof getValueText === \"function\" ? getValueText(value, percent) : valueText;\n  };\n  return {\n    bind: {\n      \"data-indeterminate\": isIndeterminate ? \"\" : void 0,\n      \"aria-valuemax\": max,\n      \"aria-valuemin\": min,\n      \"aria-valuenow\": isIndeterminate ? void 0 : value,\n      \"aria-valuetext\": getAriaValueText(),\n      role\n    },\n    percent,\n    value\n  };\n}\n\n// src/shape.tsx\nimport { chakra } from \"@chakra-ui/system\";\nvar Shape = (props) => {\n  const { size, isIndeterminate, ...rest } = props;\n  return /* @__PURE__ */ React.createElement(chakra.svg, {\n    viewBox: \"0 0 100 100\",\n    __css: {\n      width: size,\n      height: size,\n      animation: isIndeterminate ? `${rotate} 2s linear infinite` : void 0\n    },\n    ...rest\n  });\n};\nShape.displayName = \"Shape\";\n\n// src/circle.tsx\nimport { chakra as chakra2 } from \"@chakra-ui/system\";\nvar Circle = (props) => /* @__PURE__ */ React.createElement(chakra2.circle, {\n  cx: 50,\n  cy: 50,\n  r: 42,\n  fill: \"transparent\",\n  ...props\n});\nCircle.displayName = \"Circle\";\n\n// src/circular-progress.tsx\nvar CircularProgress = forwardRef((props, ref) => {\n  const {\n    size = \"48px\",\n    max = 100,\n    min = 0,\n    valueText,\n    getValueText,\n    value,\n    capIsRound,\n    children,\n    thickness = \"10px\",\n    color = \"#0078d4\",\n    trackColor = \"#edebe9\",\n    isIndeterminate,\n    ...rest\n  } = props;\n  const progress2 = getProgressProps({\n    min,\n    max,\n    value,\n    valueText,\n    getValueText,\n    isIndeterminate\n  });\n  const determinant = isIndeterminate ? void 0 : (progress2.percent ?? 0) * 2.64;\n  const strokeDasharray = determinant == null ? void 0 : `${determinant} ${264 - determinant}`;\n  const indicatorProps = isIndeterminate ? {\n    css: { animation: `${spin} 1.5s linear infinite` }\n  } : {\n    strokeDashoffset: 66,\n    strokeDasharray,\n    transitionProperty: \"stroke-dasharray, stroke\",\n    transitionDuration: \"0.6s\",\n    transitionTimingFunction: \"ease\"\n  };\n  const rootStyles = {\n    display: \"inline-block\",\n    position: \"relative\",\n    verticalAlign: \"middle\",\n    fontSize: size\n  };\n  return /* @__PURE__ */ React.createElement(chakra3.div, {\n    ref,\n    className: \"chakra-progress\",\n    ...progress2.bind,\n    ...rest,\n    __css: rootStyles\n  }, /* @__PURE__ */ React.createElement(Shape, {\n    size,\n    isIndeterminate\n  }, /* @__PURE__ */ React.createElement(Circle, {\n    stroke: trackColor,\n    strokeWidth: thickness,\n    className: \"chakra-progress__track\"\n  }), /* @__PURE__ */ React.createElement(Circle, {\n    stroke: color,\n    strokeWidth: thickness,\n    className: \"chakra-progress__indicator\",\n    strokeLinecap: capIsRound ? \"round\" : void 0,\n    opacity: progress2.value === 0 && !isIndeterminate ? 0 : void 0,\n    ...indicatorProps\n  })), children);\n});\nCircularProgress.displayName = \"CircularProgress\";\n\n// src/progress.tsx\nimport {\n  chakra as chakra4,\n  omitThemingProps,\n  useMultiStyleConfig,\n  forwardRef as forwardRef2\n} from \"@chakra-ui/system\";\nimport { createContext } from \"@chakra-ui/react-context\";\nvar [ProgressStylesProvider, useProgressStyles] = createContext({\n  name: `ProgressStylesContext`,\n  errorMessage: `useProgressStyles returned is 'undefined'. Seems you forgot to wrap the components in \"<Progress />\" `\n});\nvar ProgressFilledTrack = forwardRef2((props, ref) => {\n  const { min, max, value, isIndeterminate, role, ...rest } = props;\n  const progress2 = getProgressProps({\n    value,\n    min,\n    max,\n    isIndeterminate,\n    role\n  });\n  const styles = useProgressStyles();\n  const trackStyles = {\n    height: \"100%\",\n    ...styles.filledTrack\n  };\n  return /* @__PURE__ */ React.createElement(chakra4.div, {\n    ref,\n    style: { width: `${progress2.percent}%`, ...rest.style },\n    ...progress2.bind,\n    ...rest,\n    __css: trackStyles\n  });\n});\nvar Progress = forwardRef2((props, ref) => {\n  var _a;\n  const {\n    value,\n    min = 0,\n    max = 100,\n    hasStripe,\n    isAnimated,\n    children,\n    borderRadius: propBorderRadius,\n    isIndeterminate,\n    \"aria-label\": ariaLabel,\n    \"aria-labelledby\": ariaLabelledBy,\n    \"aria-valuetext\": ariaValueText,\n    title,\n    role,\n    ...rest\n  } = omitThemingProps(props);\n  const styles = useMultiStyleConfig(\"Progress\", props);\n  const borderRadius = propBorderRadius ?? ((_a = styles.track) == null ? void 0 : _a.borderRadius);\n  const stripeAnimation = { animation: `${stripe} 1s linear infinite` };\n  const shouldAddStripe = !isIndeterminate && hasStripe;\n  const shouldAnimateStripe = shouldAddStripe && isAnimated;\n  const css = {\n    ...shouldAnimateStripe && stripeAnimation,\n    ...isIndeterminate && {\n      position: \"absolute\",\n      willChange: \"left\",\n      minWidth: \"50%\",\n      animation: `${progress} 1s ease infinite normal none running`\n    }\n  };\n  const trackStyles = {\n    overflow: \"hidden\",\n    position: \"relative\",\n    ...styles.track\n  };\n  return /* @__PURE__ */ React.createElement(chakra4.div, {\n    ref,\n    borderRadius,\n    __css: trackStyles,\n    ...rest\n  }, /* @__PURE__ */ React.createElement(ProgressStylesProvider, {\n    value: styles\n  }, /* @__PURE__ */ React.createElement(ProgressFilledTrack, {\n    \"aria-label\": ariaLabel,\n    \"aria-labelledby\": ariaLabelledBy,\n    \"aria-valuetext\": ariaValueText,\n    min,\n    max,\n    value,\n    isIndeterminate,\n    css,\n    borderRadius,\n    title,\n    role\n  }), children));\n});\nProgress.displayName = \"Progress\";\n\n// src/progress-label.tsx\nimport { chakra as chakra5 } from \"@chakra-ui/system\";\nvar ProgressLabel = (props) => {\n  const styles = useProgressStyles();\n  const labelStyles = {\n    top: \"50%\",\n    left: \"50%\",\n    width: \"100%\",\n    textAlign: \"center\",\n    position: \"absolute\",\n    transform: \"translate(-50%, -50%)\",\n    ...styles.label\n  };\n  return /* @__PURE__ */ React.createElement(chakra5.div, {\n    ...props,\n    __css: labelStyles\n  });\n};\nProgressLabel.displayName = \"ProgressLabel\";\n\n// src/circular-progress-label.tsx\nimport { chakra as chakra6 } from \"@chakra-ui/system\";\nvar CircularProgressLabel = chakra6(\"div\", {\n  baseStyle: {\n    fontSize: \"0.24em\",\n    top: \"50%\",\n    left: \"50%\",\n    width: \"100%\",\n    textAlign: \"center\",\n    position: \"absolute\",\n    transform: \"translate(-50%, -50%)\"\n  }\n});\nCircularProgressLabel.displayName = \"CircularProgressLabel\";\nexport {\n  CircularProgress,\n  CircularProgressLabel,\n  Progress,\n  ProgressLabel,\n  useProgressStyles\n};\n","import {\r\n  useDisclosure,\r\n  Box,\r\n  Button,\r\n  Flex,\r\n  Input,\r\n  Modal,\r\n  ModalBody,\r\n  ModalCloseButton,\r\n  ModalContent,\r\n  ModalFooter,\r\n  ModalHeader,\r\n  ModalOverlay,\r\n  Text,\r\n  Progress,\r\n  CircularProgress,\r\n} from \"@chakra-ui/react\";\r\nimport React, { useRef, useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst Payments = () => {\r\n  const { isOpen, onOpen, onClose } = useDisclosure();\r\n  const [yes, setyes] = useState(false);\r\n  const [cvv, setCvv] = useState(\"\");\r\n  const [bad, setbad] = useState(false);\r\n  const card = useRef({});\r\n  const navigate = useNavigate();\r\n  const handleclick = () => {\r\n    setyes(true);\r\n    setTimeout(() => {\r\n      navigate(\"/lastpage\");\r\n    }, 3000);\r\n  };\r\n  const handleclick1 = () => {\r\n    setCvv(card.current.code.value);\r\n    if (cvv !== \"\") navigate(\"/lastpage\");\r\n    else setbad(true);\r\n  };\r\n  return (\r\n    <div>\r\n      {yes && (\r\n        <Flex margin=\"auto\" width=\"250px\">\r\n          <Text fontSize=\"3xl\">Placing order</Text>\r\n          <CircularProgress isIndeterminate color=\"green.300\" />\r\n        </Flex>\r\n      )}\r\n\r\n      <br />\r\n      <Box width=\"70%\" border=\"1px solid #bdbdbd\" margin=\"auto\">\r\n        <Text fontSize=\"3xl\">Payment Options</Text>\r\n        <br />\r\n        <Flex flexDirection=\"column\" gap=\"1rem\" alignItems=\"center\">\r\n          <Button\r\n            colorScheme=\"teal\"\r\n            variant=\"outline\"\r\n            width=\"40%\"\r\n            onClick={handleclick}\r\n          >\r\n            Giao hàng thu tiền\r\n          </Button>\r\n          <Button\r\n            colorScheme=\"teal\"\r\n            variant=\"outline\"\r\n            width=\"40%\"\r\n            onClick={onOpen}\r\n          >\r\n            Thanh toán bằng thẻ\r\n          </Button>\r\n          <br />\r\n        </Flex>\r\n\r\n        <Modal isOpen={isOpen} onClose={onClose}>\r\n          <ModalOverlay />\r\n          <ModalContent>\r\n            <ModalHeader>Using Card</ModalHeader>\r\n            <ModalCloseButton />\r\n            <ModalBody>\r\n              <br />\r\n              <Flex flexDirection=\"column\" gap=\"1rem\" alignItems=\"center\">\r\n                <Input\r\n                  placeholder=\"Card Number*\"\r\n                  type=\"number\"\r\n                  width=\"60%\"\r\n                  ref={(e) => (card.current[\"number\"] = e)}\r\n                />\r\n                <Input\r\n                  placeholder=\"Expiration date*\"\r\n                  type=\"number\"\r\n                  width=\"60%\"\r\n                  ref={(e) => (card.current[\"exp\"] = e)}\r\n                />\r\n                <Input\r\n                  placeholder=\"Security code*\"\r\n                  type=\"number\"\r\n                  width=\"60%\"\r\n                  ref={(e) => (card.current[\"code\"] = e)}\r\n                />\r\n                {bad && <Text color=\"red\">Fields marked * are mandatory</Text>}\r\n              </Flex>\r\n            </ModalBody>\r\n\r\n            <ModalFooter>\r\n              <Button colorScheme=\"blue\" mr={3} onClick={onClose}>\r\n                Close\r\n              </Button>\r\n              <Button variant=\"ghost\" onClick={handleclick1}>\r\n                Submit\r\n              </Button>\r\n            </ModalFooter>\r\n          </ModalContent>\r\n        </Modal>\r\n      </Box>\r\n      <br />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Payments;\r\n"],"names":["spin","keyframes","strokeDasharray","strokeDashoffset","rotate","transform","progress","left","stripe","from","backgroundPosition","to","getProgressProps","options","value","min","max","valueText","getValueText","isIndeterminate","role","percent","valueToPercent","bind","getAriaValueText","Shape","props","size","rest","React","chakra","viewBox","__css","width","height","animation","displayName","Circle","chakra2","cx","cy","r","fill","CircularProgress","forwardRef","ref","capIsRound","children","thickness","color","trackColor","progress2","determinant","indicatorProps","css","transitionProperty","transitionDuration","transitionTimingFunction","rootStyles","display","position","verticalAlign","fontSize","chakra3","className","stroke","strokeWidth","strokeLinecap","opacity","createContext","name","errorMessage","ProgressStylesProvider","useProgressStyles","ProgressFilledTrack","forwardRef2","styles","trackStyles","filledTrack","chakra4","style","_a","omitThemingProps","hasStripe","isAnimated","propBorderRadius","borderRadius","ariaLabel","ariaLabelledBy","ariaValueText","title","useMultiStyleConfig","track","stripeAnimation","shouldAnimateStripe","willChange","minWidth","overflow","chakra6","baseStyle","top","textAlign","useDisclosure","isOpen","onOpen","onClose","useState","yes","setyes","cvv","setCvv","bad","setbad","card","useRef","navigate","useNavigate","margin","border","flexDirection","gap","alignItems","colorScheme","variant","onClick","setTimeout","placeholder","type","e","current","mr","code"],"sourceRoot":""}